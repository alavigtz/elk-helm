apiVersion: apps/v1
kind: Deployment
metadata:
  name: es-auto
  namespace: elk
  labels:
    name: es-auto
spec:
  replicas: 1
  selector:
    matchLabels:
      name: es-auto
  template:
    metadata:
      labels:
        name: es-auto
    spec:
      nodeSelector:
       kubernetes.io/hostname: sdccontpro01
      volumes:
        - name: elk-pv-storage
          persistentVolumeClaim:
            claimName: elk-pv-claim
      containers:
      - name: es-auto
        image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
        imagePullPolicy: Never
        ports:
        - containerPort: 9200
          name: http
        env:
          - name: discovery.type
            value: single-node
          - name: xpack.security.enabled
            value: 'true'
          - name: ES_JAVA_OPTS
            value: '-Xms2g -Xmx2g'
        volumeMounts:
        - mountPath: "/usr/share/elasticsearch/data"
          name: elk-pv-storage
---
apiVersion: v1
kind: Service
metadata:
  name: es-auto
  namespace: elk
  labels:
    name: es-auto
spec:
  type: ClusterIP
  externalIPs:
    - 158.98.6.18
  selector:
    name: es-auto
  ports:
    - port: 31996
      targetPort: 9200
      protocol: TCP
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: elk-pv-volume
  namespace: elk
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 30Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/kube-volumes/atmf-elk/elasticsearch/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elk-pv-claim
  namespace: elk
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 30Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-credentials
  namespace: elk
type: Opaque
data:
  username: ZWxhc3RpYw==
  password: RTFAMnQxYzIzNHJjSA==
